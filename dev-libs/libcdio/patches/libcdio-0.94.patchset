From 3462988a94857e046cf0dc09e4fbeb6661457fa0 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Sat, 19 Apr 2014 21:36:18 +0000
Subject: gcc2 build fix


diff --git a/configure.ac b/configure.ac
index 24e1698..6095b44 100644
--- a/configure.ac
+++ b/configure.ac
@@ -255,7 +255,7 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
 dnl empty_array_size
 AC_MSG_CHECKING([how to create empty arrays])
 
-empty_array_size="xxxx"
+empty_array_size="xxx"
 AC_TRY_COMPILE([],[struct { int foo; int bar[]; } doo;], empty_array_size="")
 
 if test "x$empty_array_size" = "xxxx"; then
@@ -636,6 +636,7 @@ if test "x$enable_cddb" != "xno"; then
     [AC_MSG_WARN([new enough libcddb not found. CDDB access disabled. Get libcddb from http://libcddb.sourceforge.net])
     HAVE_CDDB=no])
     AC_CHECK_LIB(socket, connect)
+    AC_CHECK_LIB(network, connect)
     AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, gethostbyname))
 fi
 
diff --git a/example/mmc1.c b/example/mmc1.c
index 29991e7..66b7a67 100644
--- a/example/mmc1.c
+++ b/example/mmc1.c
@@ -90,9 +90,9 @@ main(int argc, const char *argv[])
     {
 	driver_return_code_t i_status;
 	bool b_erasable;
+	cdio_mmc_feature_profile_t disctype;
 
 	i_status = mmc_get_disc_erasable(p_cdio, &b_erasable);
-	cdio_mmc_feature_profile_t disctype;
 	if (DRIVER_OP_SUCCESS == i_status)
 	    printf("-- Disc is %serasable.\n", b_erasable ? "" : "not ");
 	else
-- 
2.13.1


From 9d12e524359efaa19db8bd35a2ea0fc652104115 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Fri, 12 Sep 2014 11:36:35 +0200
Subject: Fix tests for gcc2.


diff --git a/lib/driver/abs_path.c b/lib/driver/abs_path.c
index 235c5b4..f329f82 100644
--- a/lib/driver/abs_path.c
+++ b/lib/driver/abs_path.c
@@ -93,10 +93,12 @@ cdio_dirname(const char *fname)
 char *
 cdio_abspath(const char *cwd, const char *fname)
 {
+    size_t len;
+    char* result;
     if (isdirsep(*fname)) return strdup(fname);
 
-    size_t len   = strlen(cwd) + strlen(fname) + 2;
-    char* result = calloc(sizeof(char), len);
+    len   = strlen(cwd) + strlen(fname) + 2;
+    result = calloc(sizeof(char), len);
     snprintf(result, len, "%s%c%s",
 	     cwd, CDIO_FILE_SEPARATOR, fname);
     return result;
-- 
2.13.1

